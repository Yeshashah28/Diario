{"ast":null,"code":"var _jsxFileName = \"E:\\\\Journal\\\\frontend\\\\src\\\\Components\\\\Alert\\\\AlertBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Toast, ToastContainer } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertBox = ({\n  message,\n  variant,\n  type,\n  dismisstime = 2000\n}) => {\n  _s();\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShow(false);\n    }, dismisstime);\n    return () => clearTimeout(timer);\n  }, [dismisstime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      className: \"p-3\",\n      style: {\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        bg: variant,\n        show: show,\n        delay: dismisstime,\n        autohide: true,\n        children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n          className: \"text-white\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertBox, \"7rrxj0wE5iz58YydTDN/pg4Izes=\");\n_c = AlertBox;\nexport default AlertBox;\nvar _c;\n$RefreshReg$(_c, \"AlertBox\");","map":{"version":3,"names":["React","useEffect","useState","Toast","ToastContainer","jsxDEV","_jsxDEV","AlertBox","message","variant","type","dismisstime","_s","show","setShow","timer","setTimeout","clearTimeout","children","position","className","style","zIndex","bg","delay","autohide","Body","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Journal/frontend/src/Components/Alert/AlertBox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {Toast, ToastContainer} from 'react-bootstrap';\r\n\r\nconst AlertBox = ({message,variant,type, dismisstime=2000}) => {\r\n  const [show, setShow] = useState(true);\r\n  useEffect(()=>{\r\n   const timer=setTimeout(() => {\r\n    setShow(false);\r\n   }, dismisstime);\r\n   return ()=>clearTimeout(timer);\r\n  },[dismisstime]);\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer position=\"top-center\" className=\"p-3\" style={{ zIndex: 9999 }}>\r\n      <Toast bg={variant} show={show} delay={dismisstime} autohide>\r\n        <Toast.Body className=\"text-white\">{message}</Toast.Body>\r\n      </Toast>\r\n    </ToastContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertBox\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,KAAK,EAAEC,cAAc,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAGA,CAAC;EAACC,OAAO;EAACC,OAAO;EAACC,IAAI;EAAEC,WAAW,GAAC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtCD,SAAS,CAAC,MAAI;IACb,MAAMc,KAAK,GAACC,UAAU,CAAC,MAAM;MAC5BF,OAAO,CAAC,KAAK,CAAC;IACf,CAAC,EAAEH,WAAW,CAAC;IACf,OAAO,MAAIM,YAAY,CAACF,KAAK,CAAC;EAC/B,CAAC,EAAC,CAACJ,WAAW,CAAC,CAAC;EAEhB,oBACEL,OAAA;IAAAY,QAAA,eACEZ,OAAA,CAACF,cAAc;MAACe,QAAQ,EAAC,YAAY;MAACC,SAAS,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAJ,QAAA,eAC9EZ,OAAA,CAACH,KAAK;QAACoB,EAAE,EAAEd,OAAQ;QAACI,IAAI,EAAEA,IAAK;QAACW,KAAK,EAAEb,WAAY;QAACc,QAAQ;QAAAP,QAAA,eAC1DZ,OAAA,CAACH,KAAK,CAACuB,IAAI;UAACN,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAEV;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAlBKL,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAoBd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}