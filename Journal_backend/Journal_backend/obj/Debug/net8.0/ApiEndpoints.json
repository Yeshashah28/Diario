[
  {
    "ContainingType": "Journal_backend.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "Journal_backend.Dto.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "register",
        "Type": "Journal_backend.Dto.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.JournalController",
    "Method": "AddJournal",
    "RelativePath": "api/Journal/addJournal",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journal",
        "Type": "Journal_backend.Dto.JournalDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.JournalController",
    "Method": "DeleteJournal",
    "RelativePath": "api/Journal/deleteJournal/{journal_id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journal_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.JournalController",
    "Method": "GetAllJournals",
    "RelativePath": "api/Journal/getAllJournals",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Journal_backend.Dto.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.JournalController",
    "Method": "GetJournalById",
    "RelativePath": "api/Journal/getJournalById/{journal_id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journal_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.JournalController",
    "Method": "UpdateJournal",
    "RelativePath": "api/Journal/updateJournal",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "journal",
        "Type": "Journal_backend.Dto.JournalDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.JournalController",
    "Method": "UploadPhoto",
    "RelativePath": "api/Journal/uploadPhoto",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Journal_backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Journal_backend.WeatherForecast, Journal_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]